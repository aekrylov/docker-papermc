#!/bin/sh
### BEGIN INIT INFO
# Provides:       minecraft_server
# Required-Start: $remote_fs $syslog
# Required-Stop:  $remote_fs $syslog
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# chkconfig:      345 50 50
# Description:    Minecraft Server Control Script
### END INIT INFO
#
# startscript for spigot minecraft server
#
# (c) 2015-2016 nimmis <kjell.havneskold@gmail.com>
#


MC_USER=minecraft       # User name running the minecraft server
MC_DIR=/minecraft # Directory where the server should run


USAGE=$(cat <<EOF
Usage:  $0 <option>

Options:

  create <version>
    Create a minecraft server, version is the version of minecraft you want to use.
    latest gives the latest version. Does not clean other files in the directory

  accept-eula
    Accepts Mojangs EULA and set eula.txt correct

  backup
    Makes a backup of the world
EOF
)

# execute command as minecraft user

execCMD() {
	# if running as root, switch to defined user

	if [ $(id -u) -eq 0 ]; then
		su -s /bin/sh -c "$1" $MC_USER $2
	else
		sh -c "$1" $2
	fi
}

#
# setProp
#
# setProp <filename> <property> <value>
#
#
setProp() {

  grep -q "^$2\s*\=" $1

  if [ $? -ne 0 ] ; then
	echo "$prop=$val" >> $1
  else
    sed -i "/^$2\s*=/ c $2=$3" $1
  fi

}


#
# create eula.txt if it does not exist
#

createEULA() {

  if [ ! -f $MC_DIR/eula.txt  ] ; then
       execCMD "echo '#EULA file created by minecraft script\neula=false' > $MC_DIR/eula.txt"
  fi

}

#
# EULA accepted (0) or not (1)
#

acceptEULA() {
  local OK=1
  grep eula $MC_DIR/eula.txt |  grep -q 'true' && OK=0
  echo "$OK"
}


#
# download Paper jar for requested version
#

buildjar() {
  # build it if it not exists
  cd $MC_HOME/
  if [ ! -f server-$1.jar ]; then
    echo "Downloading Paper version ($1) jar file"
    wget https://papermc.io/api/v1/paper/$1/latest/download -O server-$1.jar
  fi
  execCMD "rm -f $MC_HOME/server.jar"
  execCMD "ln -s $MC_HOME/server-$1.jar $MC_HOME/server.jar"
}

seteula() {

    # make sure that we have an eula.txt file to modifie

    createEULA

    setProp $MC_DIR/eula.txt "eula" "true"

    echo "EULA accepted"

}

case "$1" in

  create)
    SVER=$2
    if [ -z "$SVER" ] ; then
      SVER="latest"
    fi
    echo "Setting version to $SVER"

    buildjar $SVER
  ;;

  accept-eula)

    seteula

  ;;

  console)

  ;;

  backup)

  ;;

  *)
    printf "$USAGE\n"
    exit 1
  ;;

esac

exit 0
